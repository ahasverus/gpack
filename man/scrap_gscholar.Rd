% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scrap-gscholar.R
\name{scrap_gscholar}
\alias{scrap_gscholar}
\title{Retrieve metadata from Google Scholar}
\usage{
scrap_gscholar(
  search_terms,
  exact = TRUE,
  exclude_terms = NULL,
  search_author = NULL,
  search_source = NULL,
  metadata = FALSE,
  where = NULL,
  years = NULL,
  lang = NULL,
  start = 0,
  n_max = NULL,
  include_patents = FALSE,
  include_citations = FALSE,
  ovpn_country,
  agent = TRUE,
  verbose = TRUE,
  keep_html = FALSE,
  output_path = "."
)
}
\arguments{
\item{search_terms}{a \code{character} of length 1. Terms to search papers for
(optional).}

\item{exact}{a \code{logical}. If \code{TRUE}, search for the exact terms, otherwise
search at least one of the terms.}

\item{exclude_terms}{a \code{character} of length 1. Terms to exclude from the
search (optional).}

\item{search_author}{a \code{character} of length 1. Authors to search for
(optional).}

\item{search_source}{a \code{character} of length 1. Publication sources to
search for (optional).}

\item{metadata}{a \code{logical}. If \code{TRUE}, all publications data are extracted.
Otherwise, only the total number of publications is returned.}

\item{where}{a \code{character} of length 1. One among \code{'any'} (search in the
whole document) or \code{'title'} (search only in the title).}

\item{years}{a \code{integer} of length 1 or 2. Year(s) specifying the temporal
extent of the search.}

\item{lang}{a \code{character} of length 1. The ISO-2 code of the language to
search for. Use \code{\link[=get_languages]{get_languages()}} to get a list (optional).}

\item{start}{a \code{numeric} of length 1. The number of the first results from
which the results are extracted (default is \code{0}, start from the first
result).}

\item{n_max}{a \code{numeric} of length 1. The number of results to extract.}

\item{include_patents}{a \code{logical}. If \code{TRUE}, patents are included in the
search results.}

\item{include_citations}{a \code{logical}. If \code{TRUE}, citations are included in
the search results.}

\item{ovpn_country}{a \code{character} vector. The ISO-2 code of the country to
pick up a VPN server. Use \code{\link[=get_countries]{get_countries()}} to get a list.}

\item{agent}{a \code{logical}. If \code{TRUE}, web browser user agent will be randomly
changed.}

\item{verbose}{a \code{logical}. If \code{TRUE}, connection and scraping information
are printing.}

\item{keep_html}{a \code{logical}. If \code{TRUE}, raw HTML pages are kept.}

\item{output_path}{a \code{character} of length 1. The path to the folder to
save data.}
}
\value{
No return value.
}
\description{
Sends a request to Google Scholar service and retrieves results (title,
authors, source and year of publications, and the total number of citations).

As no API is provided by Google Scholar (except the one for authors with a
Google Scholar ID), this function scraps the service using the package
\code{\link{RSelenium}}.

To bypass Google IP bans, the IP address and the User agent will be changed
in case of ban.
}
\examples{
\dontrun{
scrap_gscholar()
}
}
