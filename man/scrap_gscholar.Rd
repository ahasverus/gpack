% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scrap_gscholar.R
\name{scrap_gscholar}
\alias{scrap_gscholar}
\title{Retrieve Data from Google Scholar}
\usage{
scrap_gscholar(
  search_terms,
  exact = TRUE,
  exclude_terms = NULL,
  search_author = NULL,
  search_source = NULL,
  metadata = FALSE,
  where = NULL,
  years = NULL,
  lang = NULL,
  start = 0,
  n_max = NULL,
  include_patents = FALSE,
  include_citations = FALSE,
  port = 4567L,
  openvpn = TRUE,
  config_path = "~/.ovpn",
  ovpn_country,
  agent = TRUE,
  sleep = 1,
  verbose = TRUE,
  keep_html = FALSE,
  output_path = "."
)
}
\arguments{
\item{search_terms}{A character vector of terms to search publications for.}

\item{exact}{A boolen. If TRUE, searchs for the exact terms, otherwise searchs at least one of the terms.}

\item{exclude_terms}{A character vector of terms to exclude from the search.}

\item{search_author}{A character vector of authors to search for.}

\item{search_source}{A character vector of publication sources to search for.}

\item{metadata}{A boolean. If TRUE, all publications data are extracted. Otherwise, only the total number of publications is returned.}

\item{where}{Search in the whole document ('any') or only in the title ('title').}

\item{years}{A vector of 1 or 2 years specifying the temporal extent of the search.}

\item{lang}{The ISO-2 code of the language to search for. Use \code{get_languages()} to get a list.}

\item{start}{A numeric specifying the number of the first results from which the results are extracted.}

\item{n_max}{A numeric specifying the number of results to extract.}

\item{include_patents}{A boolean. If TRUE, patents are included in the search results.}

\item{include_citations}{A boolean. If TRUE, citations are included in the search results.}

\item{port}{The port number to run on Selenium server.}

\item{openvpn}{A boolean. If TRUE, public IP address will be randomly changed.}

\item{config_path}{The path to the folder containing server configuration files.}

\item{ovpn_country}{The ISO-2 code of the country to pick up a server. Use \code{get_countries()} to get a list.}

\item{agent}{A boolean. If TRUE, browser user agent will be randomly changed.}

\item{sleep}{The time interval (in seconds) between two sub-requests.}

\item{verbose}{A boolean. If TRUE, connexion and webscraping informations are printing.}

\item{keep_html}{A boolean. If TRUE, HTML pages are kept.}

\item{output_path}{The path to the folder to save data.}
}
\value{
A 7-columns data frame with:
\itemize{
\item query: the query terms
\item gsid: the publication Google Scholar ID
\item title: the publication title
\item authors: the publication authors
\item source: the publication source
\item year: the publication year
\item citation: the number of citations of the publication
}
}
\description{
This function sends a request to Google Scholar service and
retrieves results (title, authors, source and year of publications,
and the total number of citations). As no API is provided by Google Scholar
(except the one for authors with a Google Scholar ID), this function webscraps
the service using \code{RSelenium} or the packages \code{rvest} and \code{httr}.
To bypass Google IP bans, user is strongly encouraged to set the arguments
\code{openvpn} and \code{agent} as \code{TRUE}. In this way, every 10-20
sub-requests your IP and your user agent will be automatically and randomly changed.
}
\examples{
\dontrun{
scrap_gscholar()
}
}
\author{
Nicolas CASAJUS, \email{nicolas.casajus@gmail.com}
}
