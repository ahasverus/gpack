% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scrap_gsearch.R
\name{scrap_gsearch}
\alias{scrap_gsearch}
\title{Retrieve Data from Google Search}
\usage{
scrap_gsearch(
  search_terms,
  port = 4567L,
  openvpn = TRUE,
  rs_driver = NULL,
  config_path = "~/.ovpn",
  ovpn_country,
  agent = TRUE,
  sleep = 1,
  verbose = TRUE,
  output_path = ".",
  exposed_ip = NULL
)
}
\arguments{
\item{search_terms}{A character vector of terms to search publications for.}

\item{port}{The port number to run on Selenium server.}

\item{openvpn}{A boolean. If TRUE, public IP address will be randomly changed.}

\item{rs_driver}{An RSelenium server.}

\item{config_path}{The path to the folder containing server configuration files.}

\item{ovpn_country}{The ISO-2 code of the country to pick up a server. Use \code{get_countries()} to get a list.}

\item{agent}{A boolean. If TRUE, browser user agent will be randomly changed.}

\item{sleep}{The time interval (in seconds) between two sub-requests.}

\item{verbose}{A boolean. If TRUE, connexion and webscraping informations are printing.}

\item{output_path}{The path to the folder to save data.}

\item{exposed_ip}{The unprotected IPv4 address.}
}
\value{
The RSelenium server
}
\description{
This function sends a request to Google Scholar service and
retrieves results (title, authors, source and year of publications,
and the total number of citations). As no API is provided by Google Scholar
(except the one for authors with a Google Scholar ID), this function webscraps
the service using \code{RSelenium} or the packages \code{rvest} and \code{httr}.
To bypass Google IP bans, user is strongly encouraged to set the arguments
\code{openvpn} and \code{agent} as \code{TRUE}. In this way, every 10-20
sub-requests your IP and your user agent will be automatically and randomly changed.
}
\examples{
\dontrun{
scrap_gsearch()
}
}
\author{
Nicolas CASAJUS, \email{nicolas.casajus@gmail.com}
}
